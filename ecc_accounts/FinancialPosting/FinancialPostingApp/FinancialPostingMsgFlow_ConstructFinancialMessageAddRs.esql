

CREATE COMPUTE MODULE FinancialPostingMsgFlow_ConstructFinancialMessageAddRs
	DECLARE ReplyName EXTERNAL CHARACTER '';
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE inRef REFERENCE TO InputRoot.XMLNSC.IFX;
		DECLARE providerCode, providerCodeDesc, AuthCode  CHARACTER;
		DECLARE envRef,envRsRef,envFinPostRqRef,envLogRef,
		envFinPostRsRef,envAuthRef,envRootRef, envMsgRef ,envHdrRef  REFERENCE TO Environment.Variables;
		DECLARE outRootRef,outRef,outMsgRef,outHdrRef,outFinPostRef  REFERENCE TO OutputRoot;
		
		
		SET providerCode      = OutputRoot.XMLNSC.IFX.BankSvcRs.*[<].Status.ServerStatusCode;
		SET providerCodeDesc  = OutputRoot.XMLNSC.IFX.BankSvcRs.*[<].Status.StatusDesc;

		IF providerCode IS NULL
		THEN
			SET providerCode = OutputRoot.XMLNSC.IFX.BankSvcRs.*[<].Status.StatusCode;
		END IF;

		IF providerCode IS NULL
		THEN
			SET providerCode = OutputRoot.XMLNSC.IFX.Status.StatusCode;
		END IF;

		IF providerCodeDesc IS NULL
		THEN
			SET providerCodeDesc = OutputRoot.XMLNSC.IFX.Status.StatusDesc;
		END IF;

		SET providerCodeDesc = SUBSTRING(providerCodeDesc FROM 1 FOR 128);

		IF providerCode = '0' THEN
			SET OutputLocalEnvironment.Variables.retCode.ESBERRORCODE    = '0000';
			SET OutputLocalEnvironment.Variables.retCode.ESBERRORCODEMSG = 'Success';
		ELSE
			--
			SET  OutputLocalEnvironment.Variables.Cache = NULL;
			SET OutputLocalEnvironment.Variables.Cache.Values[1] = 'IFX';
			SET OutputLocalEnvironment.Variables.Cache.Values[2] = providerCode;
			DECLARE refValues REFERENCE TO OutputLocalEnvironment.Variables.Cache;
			CALL CommonServicesLib.CACHE(providerCode,'ERRORCODEMAP','SELECT ESBERRORCODE,PROVIDERERRORCODEMSG FROM ERRORCODEMAP WHERE PROVIDERID=? AND PROVIDERERRORCODE = ?',refValues,envRef);
	 		--	  
			IF envRef.ERRORCODEMAP.{providerCode}.ESBERRORCODE IS NULL THEN
				SET OutputLocalEnvironment.Variables.retCode.ESBERRORCODE = '6666';
			ELSE
				SET OutputLocalEnvironment.Variables.retCode.ESBERRORCODE = envRef.ERRORCODEMAP.{providerCode}.ESBERRORCODE;
			END IF;
			
			SET OutputLocalEnvironment.Variables.retCode.ESBERRORCODEMSG = providerCodeDesc;				
		END IF;		
		
		SET OutputLocalEnvironment.Variables.retCode.PROVIDERERRORCODE    = providerCode;
		SET OutputLocalEnvironment.Variables.retCode.PROVIDERERRORCODEMSG = providerCodeDesc;		
		
		IF ReplyName IS NOT NULL AND ReplyName <>'' THEN
			SET OutputRoot.XMLNSC.{ReplyName} 	= OutputRoot.XMLNSC.IFX;
			SET OutputRoot.XMLNSC.IFX			= NULL;
		END IF;	
		
		-- AUDIT IFX Response
--		CREATE LASTCHILD OF OutputLocalEnvironment.Variables AS inRef DOMAIN('XMLNSC') ;		
--		SET inRef.soapenv:Envelope.soapenv:Body.open:adaptorServiceResponse.open:adaptorServiceResult =  OutputRoot.XMLNSC;	
--		CALL CommonServicesLib.AddProviderResToAudit(envLogRef,inRef,providerCode,'',replyTime);
		
		
		--Construct Response
		

		MOVE envMsgRef TO envRef.XMLNSC.ServiceData.SourceData.XMLNSC.ns:eAI_MESSAGE;
		MOVE envHdrRef TO envMsgRef.*:eAI_HEADER;
		MOVE envFinPostRqRef TO envMsgRef.ns:eAI_BODY.ns:eAI_REQUEST.ns:*;
		
		
		SET AuthCode	= inRef.BankSvcRs.FinancialMessageAddRs.AuthCode;
		
		
		-- Build Reply
		CREATE LASTCHILD OF OutputRoot AS outRootRef DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF outRootRef AS outMsgRef NAMESPACE ns NAME 'eAI_MESSAGE';
		
		CREATE FIELD outMsgRef.ns:eAI_HEADER AS outHdrRef;
		SET outHdrRef = envRef.XMLNSC.ServiceData.SourceData.XMLNSC.ns:eAI_MESSAGE.ns:eAI_HEADER;
		
		MOVE envFinPostRqRef TO envRef.XMLNSC.ServiceData.SourceData.XMLNSC.ns:eAI_MESSAGE.ns:eAI_BODY.ns:eAI_REQUEST.ns:financialPostingRequest;
		CREATE FIELD outMsgRef.ns:eAI_BODY.ns:eAI_REPLY.ns:FinancialPostingReply AS outFinPostRef;
		
		SET outFinPostRef.ns:referenceNum 			= envFinPostRqRef.ns:referenceNum;
		SET outFinPostRef.ns:referenceNumConsumer 	= envFinPostRqRef.ns:referenceNumConsumer;
		SET outFinPostRef.ns:authCode				= AuthCode;
		SET outFinPostRef.ns:requestTime 			= envFinPostRqRef.ns:requestTime;
		
		
			
		-- return status		
		SET outFinPostRef.ns:returnStatus.ns:returnCode     =  InputLocalEnvironment.Variables.retCode.ESBERRORCODE;
		SET outFinPostRef.ns:returnStatus.ns:returnCodeDesc = InputLocalEnvironment.Variables.retCode.ESBERRORCODEMSG;				
		
		SET outFinPostRef.ns:returnStatusProvider.ns:returnCodeProvider     = InputLocalEnvironment.Variables.retCode.PROVIDERERRORCODE;
		SET outFinPostRef.ns:returnStatusProvider.ns:returnCodeDescProvider = InputLocalEnvironment.Variables.retCode.PROVIDERERRORCODEMSG;			
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
